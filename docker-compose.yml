version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: erpdocs_postgres
    environment:
      POSTGRES_DB: erpdocs
      POSTGRES_USER: erpdocs
      POSTGRES_PASSWORD: erpdocs
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U erpdocs"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: erpdocs_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      DJANGO_SECRET_KEY: dev-secret-key-change-in-production-12345678
      DJANGO_DEBUG: "true"
      DJANGO_ALLOWED_HOSTS: localhost,127.0.0.1
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: erpdocs
      DB_USER: erpdocs
      DB_PASSWORD: erpdocs
      STORAGE_PROVIDER: S3
      STORAGE_BUCKET_NAME: erpdocs-bucket
      STORAGE_REGION: us-east-1
      STORAGE_URL_EXPIRES_SECONDS: 900
      AWS_ACCESS_KEY_ID: test-access-key
      AWS_SECRET_ACCESS_KEY: test-secret-key
      ALLOWED_MIME_TYPES: application/pdf,image/jpeg,image/png
      MAX_UPLOAD_BYTES: 10485760
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
